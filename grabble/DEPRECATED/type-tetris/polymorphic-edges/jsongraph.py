# generated by datamodel-codegen:
#   filename:  json-graph-schema-v2.1.json
#   timestamp: 2022-08-03T16:48:13+00:00

from __future__ import annotations

from enum import Enum
from typing import Any, Dict, List, Optional, Union

from pydantic import BaseModel, Extra, Field


class Directed(Enum):
    bool_False = False


class Node(BaseModel):
    label: Optional[str] = None
    metadata: Optional[Dict[str, Any]] = None
    additionalProperties: Optional[Any] = None


class Edge(BaseModel):
    class Config:
        extra = Extra.allow

    id: Optional[str] = None
    source: str
    target: str
    relation: Optional[str] = None
    directed: Optional[bool] = True
    label: Optional[str] = None
    metadata: Optional[Dict[str, Any]] = None


class Directedhyperedge(BaseModel):
    class Config:
        extra = Extra.allow

    id: Optional[str] = None
    source: List[str]
    target: List[str]
    relation: Optional[str] = None
    label: Optional[str] = None
    metadata: Optional[Dict[str, Any]] = None


class Undirectedhyperedge(BaseModel):
    class Config:
        extra = Extra.allow

    id: Optional[str] = None
    nodes: List[str]
    relation: Optional[str] = None
    label: Optional[str] = None
    metadata: Optional[Dict[str, Any]] = None


class GraphItem(BaseModel):
    class Config:
        extra = Extra.allow

    id: Optional[str] = None
    label: Optional[str] = None
    directed: Optional[bool] = True
    type: Optional[str] = None
    metadata: Optional[Dict[str, Any]] = None
    nodes: Optional[Dict[str, Node]] = None
    edges: Optional[List[Edge]] = None


class GraphItem1(BaseModel):
    class Config:
        extra = Extra.allow

    id: Optional[str] = None
    label: Optional[str] = None
    directed: Optional[bool] = True
    type: Optional[str] = None
    metadata: Optional[Dict[str, Any]] = None
    nodes: Optional[Dict[str, Node]] = None
    hyperedges: Optional[List[Directedhyperedge]] = None


class GraphItem2(BaseModel):
    class Config:
        extra = Extra.allow

    id: Optional[str] = None
    label: Optional[str] = None
    directed: Directed
    type: Optional[str] = None
    metadata: Optional[Dict[str, Any]] = None
    nodes: Optional[Dict[str, Node]] = None
    hyperedges: Optional[List[Undirectedhyperedge]] = None


class Graph(BaseModel):
    __root__: Union[GraphItem, GraphItem1, GraphItem2]


class JSONGraphSchemaItem(BaseModel):
    class Config:
        extra = Extra.allow

    graph: Graph


class JSONGraphSchemaItem1(BaseModel):
    graphs: Optional[List[Graph]] = None


class JSONGraphSchema(BaseModel):
    __root__: Union[JSONGraphSchemaItem, JSONGraphSchemaItem1] = Field(
        ..., title='JSON Graph Schema'
    )
